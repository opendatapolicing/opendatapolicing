openapi: 3.0.0
info:
  title: "opendatapolicing"
  version: 3.0.0
servers:
  - url: http://localhost:10781
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: opendatapolicing-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: opendatapolicing-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /photo:
    post:
      operationId: photo
      x-vertx-event-bus: opendatapolicing-enUS-photo
      description: >+
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pk:
                  type: string
                classeNomCanonique:
                  type: string
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /:
    get:
      operationId: homepagesearchpagePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/HomePageSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/page-design:
    get:
      operationId: adminsearchPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design:
    post:
      operationId: postPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/copy:
    put:
      operationId: putcopyPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/import:
    put:
      operationId: putimportPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/merge:
    put:
      operationId: putmergePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergePageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/{id}:
    get:
      operationId: getPageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /email:
    get:
      operationId: designemailsearchpagePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignEmailSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /email/{id}:
    get:
      operationId: designemailsearchpagePageDesignId
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignEmailSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page:
    get:
      operationId: designdisplaysearchpagePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignDisplaySearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page/{id}:
    get:
      operationId: designdisplaysearchpagePageDesignId
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignDisplaySearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page-design:
    get:
      operationId: searchpagePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page-design/{id}:
    get:
      operationId: searchpagePageDesignId
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /pdf:
    get:
      operationId: designpdfsearchpagePageDesign
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/pdf:
              schema:
                $ref: '#/components/requestBodies/DesignPdfSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /pdf/{id}:
    get:
      operationId: designpdfsearchpagePageDesignId
      x-vertx-event-bus: opendatapolicing-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/pdf:
              schema:
                $ref: '#/components/requestBodies/DesignPdfSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part:
    post:
      operationId: postHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/copy:
    put:
      operationId: putcopyHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/import:
    put:
      operationId: putimportHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/merge:
    put:
      operationId: putmergeHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/{id}:
    get:
      operationId: getHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /html-part:
    get:
      operationId: searchpageHtmlPart
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /html-part/{id}:
    get:
      operationId: searchpageHtmlPartId
      x-vertx-event-bus: opendatapolicing-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: opendatapolicing-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: opendatapolicing-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: opendatapolicing-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: opendatapolicing-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: opendatapolicing-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster:
    post:
      operationId: postCluster
      x-vertx-event-bus: opendatapolicing-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    put:
      operationId: putCluster
      x-vertx-event-bus: opendatapolicing-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchCluster
      x-vertx-event-bus: opendatapolicing-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchCluster
      x-vertx-event-bus: opendatapolicing-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/{id}:
    get:
      operationId: getCluster
      x-vertx-event-bus: opendatapolicing-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /agency:
    get:
      operationId: searchpageSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /agency/{id}:
    get:
      operationId: searchpageSiteAgencyId
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/agency:
    get:
      operationId: adminsearchSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/agency:
    post:
      operationId: postSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteAgencyRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteAgencyRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/agency/copy:
    put:
      operationId: putcopySiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopySiteAgencyRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopySiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/agency/import:
    put:
      operationId: putimportSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteAgencyRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/agency/merge:
    put:
      operationId: putmergeSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeSiteAgencyRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/agency/{id}:
    get:
      operationId: getSiteAgency
      x-vertx-event-bus: opendatapolicing-enUS-SiteAgency
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSiteAgencyResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/state:
    get:
      operationId: adminsearchSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/state:
    post:
      operationId: postSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteStateRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteStateRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/state/copy:
    put:
      operationId: putcopySiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopySiteStateRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopySiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/state/import:
    put:
      operationId: putimportSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteStateRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/state/merge:
    put:
      operationId: putmergeSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeSiteStateRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/state/{id}:
    get:
      operationId: getSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /state:
    get:
      operationId: searchpageSiteState
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /state/{id}:
    get:
      operationId: searchpageSiteStateId
      x-vertx-event-bus: opendatapolicing-enUS-SiteState
      description: >+
      summary: >+
      tags:
        - State
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteStateResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/contraband:
    get:
      operationId: adminsearchTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/contraband:
    post:
      operationId: postTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Contraband
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficContrabandRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficContrabandRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/contraband/copy:
    put:
      operationId: putcopyTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyTrafficContrabandRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/contraband/import:
    put:
      operationId: putimportTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficContrabandRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/contraband/merge:
    put:
      operationId: putmergeTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeTrafficContrabandRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/contraband/{id}:
    get:
      operationId: getTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /contraband:
    get:
      operationId: searchpageTrafficContraband
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /contraband/{id}:
    get:
      operationId: searchpageTrafficContrabandId
      x-vertx-event-bus: opendatapolicing-enUS-TrafficContraband
      description: >+
      summary: >+
      tags:
        - Contraband
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficContrabandResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/search-basis:
    get:
      operationId: adminsearchSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/search-basis:
    post:
      operationId: postSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Search Basis
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSearchBasisRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSearchBasisRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/search-basis/copy:
    put:
      operationId: putcopySearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopySearchBasisRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopySearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/search-basis/import:
    put:
      operationId: putimportSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSearchBasisRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/search-basis/merge:
    put:
      operationId: putmergeSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeSearchBasisRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/search-basis/{id}:
    get:
      operationId: getSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /search-basis:
    get:
      operationId: searchpageSearchBasis
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /search-basis/{id}:
    get:
      operationId: searchpageSearchBasisId
      x-vertx-event-bus: opendatapolicing-enUS-SearchBasis
      description: >+
      summary: >+
      tags:
        - Search Basis
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSearchBasisResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/person:
    get:
      operationId: adminsearchTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/person:
    post:
      operationId: postTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Person
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficPersonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficPersonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/person/copy:
    put:
      operationId: putcopyTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyTrafficPersonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/person/import:
    put:
      operationId: putimportTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficPersonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/person/merge:
    put:
      operationId: putmergeTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeTrafficPersonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/person/{id}:
    get:
      operationId: getTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /person:
    get:
      operationId: searchpageTrafficPerson
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /person/{id}:
    get:
      operationId: searchpageTrafficPersonId
      x-vertx-event-bus: opendatapolicing-enUS-TrafficPerson
      description: >+
      summary: >+
      tags:
        - Person
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficPersonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/traffic-stop:
    get:
      operationId: adminsearchTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-stop:
    post:
      operationId: postTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficStopRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficStopRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-stop/copy:
    put:
      operationId: putcopyTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyTrafficStopRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-stop/import:
    put:
      operationId: putimportTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficStopRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-stop/merge:
    put:
      operationId: putmergeTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeTrafficStopRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-stop/{id}:
    get:
      operationId: getTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /traffic-stop:
    get:
      operationId: searchpageTrafficStop
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /traffic-stop/{id}:
    get:
      operationId: searchpageTrafficStopId
      x-vertx-event-bus: opendatapolicing-enUS-TrafficStop
      description: >+
      summary: >+
      tags:
        - Traffic Stop
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficStopResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/traffic-search:
    get:
      operationId: adminsearchTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-search:
    post:
      operationId: postTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Search
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficSearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficSearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-search/copy:
    put:
      operationId: putcopyTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyTrafficSearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-search/import:
    put:
      operationId: putimportTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficSearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-search/merge:
    put:
      operationId: putmergeTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeTrafficSearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/traffic-search/{id}:
    get:
      operationId: getTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /traffic-search:
    get:
      operationId: searchpageTrafficSearch
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /traffic-search/{id}:
    get:
      operationId: searchpageTrafficSearchId
      x-vertx-event-bus: opendatapolicing-enUS-TrafficSearch
      description: >+
      summary: >+
      tags:
        - Traffic Search
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageTrafficSearchResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/COMPUTATE.ORG/.well-known/openid-configuration
  requestBodies:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    HomePageSearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/HomePageSearchPagePageDesignResponse'
    AdminSearchPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchPageDesignResponse'
    POSTPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTPageDesignRequest'
    POSTPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTPageDesignResponse'
    PATCHPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHPageDesignRequest'
    PATCHPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHPageDesignResponse'
    SearchPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageDesignResponse'
    PUTCopyPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyPageDesignRequest'
    PUTCopyPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyPageDesignResponse'
    PUTImportPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportPageDesignRequest'
    PUTImportPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportPageDesignResponse'
    PUTMergePageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergePageDesignRequest'
    PUTMergePageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergePageDesignResponse'
    GETPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETPageDesignResponse'
    DesignEmailSearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DesignEmailSearchPagePageDesignResponse'
    DesignDisplaySearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DesignDisplaySearchPagePageDesignResponse'
    SearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPagePageDesignResponse'
    DesignPdfSearchPagePageDesignResponse:
      content:
        application/pdf:
          schema:
            $ref: '#/components/schemas/DesignPdfSearchPagePageDesignResponse'
    POSTHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTHtmlPartRequest'
    POSTHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTHtmlPartResponse'
    PATCHHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHHtmlPartRequest'
    PATCHHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHHtmlPartResponse'
    SearchHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchHtmlPartResponse'
    PUTCopyHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyHtmlPartRequest'
    PUTCopyHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyHtmlPartResponse'
    PUTImportHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportHtmlPartRequest'
    PUTImportHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportHtmlPartResponse'
    PUTMergeHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeHtmlPartRequest'
    PUTMergeHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeHtmlPartResponse'
    GETHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETHtmlPartResponse'
    SearchPageHtmlPartResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageHtmlPartResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
    POSTClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTClusterRequest'
    POSTClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTClusterResponse'
    PUTClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTClusterRequest'
    PUTClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTClusterResponse'
    PATCHClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHClusterRequest'
    PATCHClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHClusterResponse'
    SearchClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchClusterResponse'
    GETClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETClusterResponse'
    SearchPageSiteAgencyResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteAgencyResponse'
    AdminSearchSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchSiteAgencyResponse'
    POSTSiteAgencyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteAgencyRequest'
    POSTSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteAgencyResponse'
    PATCHSiteAgencyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteAgencyRequest'
    PATCHSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteAgencyResponse'
    SearchSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteAgencyResponse'
    PUTCopySiteAgencyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopySiteAgencyRequest'
    PUTCopySiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopySiteAgencyResponse'
    PUTImportSiteAgencyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteAgencyRequest'
    PUTImportSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteAgencyResponse'
    PUTMergeSiteAgencyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeSiteAgencyRequest'
    PUTMergeSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeSiteAgencyResponse'
    GETSiteAgencyResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSiteAgencyResponse'
    AdminSearchSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchSiteStateResponse'
    POSTSiteStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteStateRequest'
    POSTSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteStateResponse'
    PATCHSiteStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteStateRequest'
    PATCHSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteStateResponse'
    SearchSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteStateResponse'
    PUTCopySiteStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopySiteStateRequest'
    PUTCopySiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopySiteStateResponse'
    PUTImportSiteStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteStateRequest'
    PUTImportSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteStateResponse'
    PUTMergeSiteStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeSiteStateRequest'
    PUTMergeSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeSiteStateResponse'
    GETSiteStateResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSiteStateResponse'
    SearchPageSiteStateResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteStateResponse'
    AdminSearchTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchTrafficContrabandResponse'
    POSTTrafficContrabandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficContrabandRequest'
    POSTTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficContrabandResponse'
    PATCHTrafficContrabandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficContrabandRequest'
    PATCHTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficContrabandResponse'
    SearchTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficContrabandResponse'
    PUTCopyTrafficContrabandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficContrabandRequest'
    PUTCopyTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficContrabandResponse'
    PUTImportTrafficContrabandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficContrabandRequest'
    PUTImportTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficContrabandResponse'
    PUTMergeTrafficContrabandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficContrabandRequest'
    PUTMergeTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficContrabandResponse'
    GETTrafficContrabandResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficContrabandResponse'
    SearchPageTrafficContrabandResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficContrabandResponse'
    AdminSearchSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchSearchBasisResponse'
    POSTSearchBasisRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSearchBasisRequest'
    POSTSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSearchBasisResponse'
    PATCHSearchBasisRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSearchBasisRequest'
    PATCHSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSearchBasisResponse'
    SearchSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSearchBasisResponse'
    PUTCopySearchBasisRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopySearchBasisRequest'
    PUTCopySearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopySearchBasisResponse'
    PUTImportSearchBasisRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSearchBasisRequest'
    PUTImportSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSearchBasisResponse'
    PUTMergeSearchBasisRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeSearchBasisRequest'
    PUTMergeSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeSearchBasisResponse'
    GETSearchBasisResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSearchBasisResponse'
    SearchPageSearchBasisResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSearchBasisResponse'
    AdminSearchTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchTrafficPersonResponse'
    POSTTrafficPersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficPersonRequest'
    POSTTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficPersonResponse'
    PATCHTrafficPersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficPersonRequest'
    PATCHTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficPersonResponse'
    SearchTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficPersonResponse'
    PUTCopyTrafficPersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficPersonRequest'
    PUTCopyTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficPersonResponse'
    PUTImportTrafficPersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficPersonRequest'
    PUTImportTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficPersonResponse'
    PUTMergeTrafficPersonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficPersonRequest'
    PUTMergeTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficPersonResponse'
    GETTrafficPersonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficPersonResponse'
    SearchPageTrafficPersonResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficPersonResponse'
    AdminSearchTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchTrafficStopResponse'
    POSTTrafficStopRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficStopRequest'
    POSTTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficStopResponse'
    PATCHTrafficStopRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficStopRequest'
    PATCHTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficStopResponse'
    SearchTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficStopResponse'
    PUTCopyTrafficStopRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficStopRequest'
    PUTCopyTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficStopResponse'
    PUTImportTrafficStopRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficStopRequest'
    PUTImportTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficStopResponse'
    PUTMergeTrafficStopRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficStopRequest'
    PUTMergeTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficStopResponse'
    GETTrafficStopResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficStopResponse'
    SearchPageTrafficStopResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficStopResponse'
    AdminSearchTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchTrafficSearchResponse'
    POSTTrafficSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficSearchRequest'
    POSTTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficSearchResponse'
    PATCHTrafficSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficSearchRequest'
    PATCHTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficSearchResponse'
    SearchTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficSearchResponse'
    PUTCopyTrafficSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficSearchRequest'
    PUTCopyTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyTrafficSearchResponse'
    PUTImportTrafficSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficSearchRequest'
    PUTImportTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficSearchResponse'
    PUTMergeTrafficSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficSearchRequest'
    PUTMergeTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeTrafficSearchResponse'
    GETTrafficSearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficSearchResponse'
    SearchPageTrafficSearchResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficSearchResponse'
  schemas:
    HomePageSearchPagePageDesignResponse:
      allOf:
        - type: string
    AdminSearchPageDesignResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              pageDesignKey:
                type: string
              childDesignKeys:
                type: array
                items:
                  type: string
              parentDesignKeys:
                type: array
                items:
                  type: string
              htmlPartKeys:
                type: array
                items:
                  type: string
              pageDesignCompleteName:
                type: string
              designHidden:
                type: boolean
              pageContentType:
                type: string
    POSTPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    POSTPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PATCHPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setPageDesignKey:
              type: string
              nullable: true
            removePageDesignKey:
              type: string
            removeAllPageDesignKey:
              type: string
            setChildDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeChildDesignKeys:
              type: string
            removeAllChildDesignKeys:
              type: array
              items:
                type: string
            addChildDesignKeys:
              type: string
            addAllChildDesignKeys:
              type: array
              items:
                type: string
            setParentDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeParentDesignKeys:
              type: string
            removeAllParentDesignKeys:
              type: array
              items:
                type: string
            addParentDesignKeys:
              type: string
            addAllParentDesignKeys:
              type: array
              items:
                type: string
            setHtmlPartKeys:
              type: array
              nullable: true
              items:
                type: string
            removeHtmlPartKeys:
              type: string
            removeAllHtmlPartKeys:
              type: array
              items:
                type: string
            addHtmlPartKeys:
              type: string
            addAllHtmlPartKeys:
              type: array
              items:
                type: string
            setPageDesignCompleteName:
              type: string
              nullable: true
            removePageDesignCompleteName:
              type: string
            removeAllPageDesignCompleteName:
              type: string
            setDesignHidden:
              type: boolean
              nullable: true
            removeDesignHidden:
              type: boolean
            removeAllDesignHidden:
              type: boolean
            setPageContentType:
              type: string
              nullable: true
            removePageContentType:
              type: string
            removeAllPageContentType:
              type: string
    PATCHPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setPageDesignKey:
              type: string
              nullable: true
            removePageDesignKey:
              type: string
            removeAllPageDesignKey:
              type: string
            setChildDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeChildDesignKeys:
              type: string
            removeAllChildDesignKeys:
              type: array
              items:
                type: string
            addChildDesignKeys:
              type: string
            addAllChildDesignKeys:
              type: array
              items:
                type: string
            setParentDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeParentDesignKeys:
              type: string
            removeAllParentDesignKeys:
              type: array
              items:
                type: string
            addParentDesignKeys:
              type: string
            addAllParentDesignKeys:
              type: array
              items:
                type: string
            setHtmlPartKeys:
              type: array
              nullable: true
              items:
                type: string
            removeHtmlPartKeys:
              type: string
            removeAllHtmlPartKeys:
              type: array
              items:
                type: string
            addHtmlPartKeys:
              type: string
            addAllHtmlPartKeys:
              type: array
              items:
                type: string
            setPageDesignCompleteName:
              type: string
              nullable: true
            removePageDesignCompleteName:
              type: string
            removeAllPageDesignCompleteName:
              type: string
            setDesignHidden:
              type: boolean
              nullable: true
            removeDesignHidden:
              type: boolean
            removeAllDesignHidden:
              type: boolean
            setPageContentType:
              type: string
              nullable: true
            removePageContentType:
              type: string
            removeAllPageContentType:
              type: string
    SearchPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              pageDesignKey:
                type: string
              childDesignKeys:
                type: array
                items:
                  type: string
              parentDesignKeys:
                type: array
                items:
                  type: string
              htmlPartKeys:
                type: array
                items:
                  type: string
              pageDesignCompleteName:
                type: string
              designHidden:
                type: boolean
              pageContentType:
                type: string
    PUTCopyPageDesignRequest:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PUTCopyPageDesignResponse:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PUTImportPageDesignRequest:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PUTImportPageDesignResponse:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PUTMergePageDesignRequest:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    PUTMergePageDesignResponse:
      allOf:
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    GETPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
            pageContentType:
              type: string
    DesignEmailSearchPagePageDesignResponse:
      allOf:
        - type: string
    DesignDisplaySearchPagePageDesignResponse:
      allOf:
        - type: string
    SearchPagePageDesignResponse:
      allOf:
        - type: string
    DesignPdfSearchPagePageDesignResponse:
      allOf:
        - type: string
        - format: binary
    POSTHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    POSTHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PATCHHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setHtmlPartKey:
              type: string
              nullable: true
            removeHtmlPartKey:
              type: string
            removeAllHtmlPartKey:
              type: string
            setPageDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removePageDesignKeys:
              type: string
            removeAllPageDesignKeys:
              type: array
              items:
                type: string
            addPageDesignKeys:
              type: string
            addAllPageDesignKeys:
              type: array
              items:
                type: string
            setHtmlLink:
              type: string
              nullable: true
            removeHtmlLink:
              type: string
            removeAllHtmlLink:
              type: string
            setHtmlElement:
              type: string
              nullable: true
            removeHtmlElement:
              type: string
            removeAllHtmlElement:
              type: string
            setHtmlId:
              type: string
              nullable: true
            removeHtmlId:
              type: string
            removeAllHtmlId:
              type: string
            setHtmlClasses:
              type: string
              nullable: true
            removeHtmlClasses:
              type: string
            removeAllHtmlClasses:
              type: string
            setHtmlStyle:
              type: string
              nullable: true
            removeHtmlStyle:
              type: string
            removeAllHtmlStyle:
              type: string
            setHtmlBefore:
              type: string
              nullable: true
            removeHtmlBefore:
              type: string
            removeAllHtmlBefore:
              type: string
            setHtmlAfter:
              type: string
              nullable: true
            removeHtmlAfter:
              type: string
            removeAllHtmlAfter:
              type: string
            setHtmlText:
              type: string
              nullable: true
            removeHtmlText:
              type: string
            removeAllHtmlText:
              type: string
            setHtmlVar:
              type: string
              nullable: true
            removeHtmlVar:
              type: string
            removeAllHtmlVar:
              type: string
            setHtmlVarSpan:
              type: string
              nullable: true
            removeHtmlVarSpan:
              type: string
            removeAllHtmlVarSpan:
              type: string
            setHtmlVarForm:
              type: string
              nullable: true
            removeHtmlVarForm:
              type: string
            removeAllHtmlVarForm:
              type: string
            setHtmlVarInput:
              type: string
              nullable: true
            removeHtmlVarInput:
              type: string
            removeAllHtmlVarInput:
              type: string
            setHtmlVarForEach:
              type: string
              nullable: true
            removeHtmlVarForEach:
              type: string
            removeAllHtmlVarForEach:
              type: string
            setHtmlVarHtml:
              type: string
              nullable: true
            removeHtmlVarHtml:
              type: string
            removeAllHtmlVarHtml:
              type: string
            setHtmlVarBase64Decode:
              type: string
              nullable: true
            removeHtmlVarBase64Decode:
              type: string
            removeAllHtmlVarBase64Decode:
              type: string
            setHtmlExclude:
              type: boolean
              nullable: true
            removeHtmlExclude:
              type: boolean
            removeAllHtmlExclude:
              type: boolean
            setPdfExclude:
              type: boolean
              nullable: true
            removePdfExclude:
              type: boolean
            removeAllPdfExclude:
              type: boolean
            setLoginLogout:
              type: boolean
              nullable: true
            removeLoginLogout:
              type: boolean
            removeAllLoginLogout:
              type: boolean
            setSearchUri:
              type: string
              nullable: true
            removeSearchUri:
              type: string
            removeAllSearchUri:
              type: string
            setMapTo:
              type: string
              nullable: true
            removeMapTo:
              type: string
            removeAllMapTo:
              type: string
            setSort1:
              type: string
              nullable: true
            removeSort1:
              type: string
            removeAllSort1:
              type: string
            setSort2:
              type: string
              nullable: true
            removeSort2:
              type: string
            removeAllSort2:
              type: string
            setSort3:
              type: string
              nullable: true
            removeSort3:
              type: string
            removeAllSort3:
              type: string
            setSort4:
              type: string
              nullable: true
            removeSort4:
              type: string
            removeAllSort4:
              type: string
            setSort5:
              type: string
              nullable: true
            removeSort5:
              type: string
            removeAllSort5:
              type: string
            setSort6:
              type: string
              nullable: true
            removeSort6:
              type: string
            removeAllSort6:
              type: string
            setSort7:
              type: string
              nullable: true
            removeSort7:
              type: string
            removeAllSort7:
              type: string
            setSort8:
              type: string
              nullable: true
            removeSort8:
              type: string
            removeAllSort8:
              type: string
            setSort9:
              type: string
              nullable: true
            removeSort9:
              type: string
            removeAllSort9:
              type: string
            setSort10:
              type: string
              nullable: true
            removeSort10:
              type: string
            removeAllSort10:
              type: string
    PATCHHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setHtmlPartKey:
              type: string
              nullable: true
            removeHtmlPartKey:
              type: string
            removeAllHtmlPartKey:
              type: string
            setPageDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removePageDesignKeys:
              type: string
            removeAllPageDesignKeys:
              type: array
              items:
                type: string
            addPageDesignKeys:
              type: string
            addAllPageDesignKeys:
              type: array
              items:
                type: string
            setHtmlLink:
              type: string
              nullable: true
            removeHtmlLink:
              type: string
            removeAllHtmlLink:
              type: string
            setHtmlElement:
              type: string
              nullable: true
            removeHtmlElement:
              type: string
            removeAllHtmlElement:
              type: string
            setHtmlId:
              type: string
              nullable: true
            removeHtmlId:
              type: string
            removeAllHtmlId:
              type: string
            setHtmlClasses:
              type: string
              nullable: true
            removeHtmlClasses:
              type: string
            removeAllHtmlClasses:
              type: string
            setHtmlStyle:
              type: string
              nullable: true
            removeHtmlStyle:
              type: string
            removeAllHtmlStyle:
              type: string
            setHtmlBefore:
              type: string
              nullable: true
            removeHtmlBefore:
              type: string
            removeAllHtmlBefore:
              type: string
            setHtmlAfter:
              type: string
              nullable: true
            removeHtmlAfter:
              type: string
            removeAllHtmlAfter:
              type: string
            setHtmlText:
              type: string
              nullable: true
            removeHtmlText:
              type: string
            removeAllHtmlText:
              type: string
            setHtmlVar:
              type: string
              nullable: true
            removeHtmlVar:
              type: string
            removeAllHtmlVar:
              type: string
            setHtmlVarSpan:
              type: string
              nullable: true
            removeHtmlVarSpan:
              type: string
            removeAllHtmlVarSpan:
              type: string
            setHtmlVarForm:
              type: string
              nullable: true
            removeHtmlVarForm:
              type: string
            removeAllHtmlVarForm:
              type: string
            setHtmlVarInput:
              type: string
              nullable: true
            removeHtmlVarInput:
              type: string
            removeAllHtmlVarInput:
              type: string
            setHtmlVarForEach:
              type: string
              nullable: true
            removeHtmlVarForEach:
              type: string
            removeAllHtmlVarForEach:
              type: string
            setHtmlVarHtml:
              type: string
              nullable: true
            removeHtmlVarHtml:
              type: string
            removeAllHtmlVarHtml:
              type: string
            setHtmlVarBase64Decode:
              type: string
              nullable: true
            removeHtmlVarBase64Decode:
              type: string
            removeAllHtmlVarBase64Decode:
              type: string
            setHtmlExclude:
              type: boolean
              nullable: true
            removeHtmlExclude:
              type: boolean
            removeAllHtmlExclude:
              type: boolean
            setPdfExclude:
              type: boolean
              nullable: true
            removePdfExclude:
              type: boolean
            removeAllPdfExclude:
              type: boolean
            setLoginLogout:
              type: boolean
              nullable: true
            removeLoginLogout:
              type: boolean
            removeAllLoginLogout:
              type: boolean
            setSearchUri:
              type: string
              nullable: true
            removeSearchUri:
              type: string
            removeAllSearchUri:
              type: string
            setMapTo:
              type: string
              nullable: true
            removeMapTo:
              type: string
            removeAllMapTo:
              type: string
            setSort1:
              type: string
              nullable: true
            removeSort1:
              type: string
            removeAllSort1:
              type: string
            setSort2:
              type: string
              nullable: true
            removeSort2:
              type: string
            removeAllSort2:
              type: string
            setSort3:
              type: string
              nullable: true
            removeSort3:
              type: string
            removeAllSort3:
              type: string
            setSort4:
              type: string
              nullable: true
            removeSort4:
              type: string
            removeAllSort4:
              type: string
            setSort5:
              type: string
              nullable: true
            removeSort5:
              type: string
            removeAllSort5:
              type: string
            setSort6:
              type: string
              nullable: true
            removeSort6:
              type: string
            removeAllSort6:
              type: string
            setSort7:
              type: string
              nullable: true
            removeSort7:
              type: string
            removeAllSort7:
              type: string
            setSort8:
              type: string
              nullable: true
            removeSort8:
              type: string
            removeAllSort8:
              type: string
            setSort9:
              type: string
              nullable: true
            removeSort9:
              type: string
            removeAllSort9:
              type: string
            setSort10:
              type: string
              nullable: true
            removeSort10:
              type: string
            removeAllSort10:
              type: string
    SearchHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              htmlPartKey:
                type: string
              pageDesignKeys:
                type: array
                items:
                  type: string
              htmlLink:
                type: string
              htmlElement:
                type: string
              htmlId:
                type: string
              htmlClasses:
                type: string
              htmlStyle:
                type: string
              htmlBefore:
                type: string
              htmlAfter:
                type: string
              htmlText:
                type: string
              htmlVar:
                type: string
              htmlVarSpan:
                type: string
              htmlVarForm:
                type: string
              htmlVarInput:
                type: string
              htmlVarForEach:
                type: string
              htmlVarHtml:
                type: string
              htmlVarBase64Decode:
                type: string
              htmlExclude:
                type: boolean
              pdfExclude:
                type: boolean
              loginLogout:
                type: boolean
              searchUri:
                type: string
              mapTo:
                type: string
              sort1:
                type: string
              sort2:
                type: string
              sort3:
                type: string
              sort4:
                type: string
              sort5:
                type: string
              sort6:
                type: string
              sort7:
                type: string
              sort8:
                type: string
              sort9:
                type: string
              sort10:
                type: string
    PUTCopyHtmlPartRequest:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTCopyHtmlPartResponse:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTImportHtmlPartRequest:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTImportHtmlPartResponse:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTMergeHtmlPartRequest:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTMergeHtmlPartResponse:
      allOf:
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    GETHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlVarHtml:
              type: string
            htmlVarBase64Decode:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            searchUri:
              type: string
            mapTo:
              type: string
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    SearchPageHtmlPartResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              userKeys:
                type: array
                items:
                  type: string
              userId:
                type: string
              userKey:
                type: string
              userName:
                type: string
              userEmail:
                type: string
              userFirstName:
                type: string
              userLastName:
                type: string
              userFullName:
                type: string
              seeArchived:
                type: boolean
              seeDeleted:
                type: boolean
    PATCHSiteUserRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userKey:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userKey:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
    POSTClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            modifiedIsoOffsetDateTime:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    POSTClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            modifiedIsoOffsetDateTime:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            modifiedIsoOffsetDateTime:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            modifiedIsoOffsetDateTime:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PATCHClusterRequest:
      allOf:
        - type: object
          properties:
            setPk:
              type: string
              nullable: true
            removePk:
              type: string
            removeAllPk:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
              nullable: true
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
              nullable: true
            removeModified:
              type: string
            removeAllModified:
              type: string
            setModifiedIsoOffsetDateTime:
              type: string
              nullable: true
            removeModifiedIsoOffsetDateTime:
              type: string
            removeAllModifiedIsoOffsetDateTime:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    PATCHClusterResponse:
      allOf:
        - type: object
          properties:
            setPk:
              type: string
              nullable: true
            removePk:
              type: string
            removeAllPk:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
              nullable: true
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
              nullable: true
            removeModified:
              type: string
            removeAllModified:
              type: string
            setModifiedIsoOffsetDateTime:
              type: string
              nullable: true
            removeModifiedIsoOffsetDateTime:
              type: string
            removeAllModifiedIsoOffsetDateTime:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    SearchClusterResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              pk:
                type: string
              inheritPk:
                type: string
              id:
                type: string
              created:
                type: string
              modified:
                type: string
              modifiedIsoOffsetDateTime:
                type: string
              archived:
                type: boolean
              deleted:
                type: boolean
              classCanonicalName:
                type: string
              classSimpleName:
                type: string
              classCanonicalNames:
                type: array
                items:
                  type: string
              sessionId:
                type: string
              userId:
                type: string
              userKey:
                type: string
              saves:
                type: array
                items:
                  type: string
              objectTitle:
                type: string
              objectId:
                type: string
              objectNameVar:
                type: string
              objectSuggest:
                type: string
              objectText:
                type: string
              pageUrlId:
                type: string
              pageUrlPk:
                type: string
              pageUrlApi:
                type: string
              pageH1:
                type: string
    GETClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            modifiedIsoOffsetDateTime:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    SearchPageSiteAgencyResponse:
      allOf:
        - type: string
    AdminSearchSiteAgencyResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              agencyKey:
                type: string
              agencyName:
                type: string
              stateKey:
                type: string
              imageLeft:
                type: string
              imageTop:
                type: string
              imageCoords:
                type: string
              stateId:
                type: string
              stateName:
                type: string
              stateAbbreviation:
                type: string
              agencyOnlyName:
                type: string
              agencyCompleteName:
                type: string
    POSTSiteAgencyRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    POSTSiteAgencyResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PATCHSiteAgencyRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setAgencyKey:
              type: string
              nullable: true
            removeAgencyKey:
              type: string
            removeAllAgencyKey:
              type: string
            setAgencyName:
              type: string
              nullable: true
            removeAgencyName:
              type: string
            removeAllAgencyName:
              type: string
            setStateKey:
              type: string
              nullable: true
            removeStateKey:
              type: string
            removeAllStateKey:
              type: string
            setImageLeft:
              type: string
              nullable: true
            removeImageLeft:
              type: string
            removeAllImageLeft:
              type: string
            setImageTop:
              type: string
              nullable: true
            removeImageTop:
              type: string
            removeAllImageTop:
              type: string
            setImageCoords:
              type: string
              nullable: true
            removeImageCoords:
              type: string
            removeAllImageCoords:
              type: string
            setStateId:
              type: string
              nullable: true
            removeStateId:
              type: string
            removeAllStateId:
              type: string
            setStateName:
              type: string
              nullable: true
            removeStateName:
              type: string
            removeAllStateName:
              type: string
            setStateAbbreviation:
              type: string
              nullable: true
            removeStateAbbreviation:
              type: string
            removeAllStateAbbreviation:
              type: string
            setAgencyOnlyName:
              type: string
              nullable: true
            removeAgencyOnlyName:
              type: string
            removeAllAgencyOnlyName:
              type: string
            setAgencyCompleteName:
              type: string
              nullable: true
            removeAgencyCompleteName:
              type: string
            removeAllAgencyCompleteName:
              type: string
    PATCHSiteAgencyResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setAgencyKey:
              type: string
              nullable: true
            removeAgencyKey:
              type: string
            removeAllAgencyKey:
              type: string
            setAgencyName:
              type: string
              nullable: true
            removeAgencyName:
              type: string
            removeAllAgencyName:
              type: string
            setStateKey:
              type: string
              nullable: true
            removeStateKey:
              type: string
            removeAllStateKey:
              type: string
            setImageLeft:
              type: string
              nullable: true
            removeImageLeft:
              type: string
            removeAllImageLeft:
              type: string
            setImageTop:
              type: string
              nullable: true
            removeImageTop:
              type: string
            removeAllImageTop:
              type: string
            setImageCoords:
              type: string
              nullable: true
            removeImageCoords:
              type: string
            removeAllImageCoords:
              type: string
            setStateId:
              type: string
              nullable: true
            removeStateId:
              type: string
            removeAllStateId:
              type: string
            setStateName:
              type: string
              nullable: true
            removeStateName:
              type: string
            removeAllStateName:
              type: string
            setStateAbbreviation:
              type: string
              nullable: true
            removeStateAbbreviation:
              type: string
            removeAllStateAbbreviation:
              type: string
            setAgencyOnlyName:
              type: string
              nullable: true
            removeAgencyOnlyName:
              type: string
            removeAllAgencyOnlyName:
              type: string
            setAgencyCompleteName:
              type: string
              nullable: true
            removeAgencyCompleteName:
              type: string
            removeAllAgencyCompleteName:
              type: string
    SearchSiteAgencyResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              agencyKey:
                type: string
              agencyName:
                type: string
              stateKey:
                type: string
              imageLeft:
                type: string
              imageTop:
                type: string
              imageCoords:
                type: string
              stateId:
                type: string
              stateName:
                type: string
              stateAbbreviation:
                type: string
              agencyOnlyName:
                type: string
              agencyCompleteName:
                type: string
    PUTCopySiteAgencyRequest:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PUTCopySiteAgencyResponse:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PUTImportSiteAgencyRequest:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PUTImportSiteAgencyResponse:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PUTMergeSiteAgencyRequest:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    PUTMergeSiteAgencyResponse:
      allOf:
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    GETSiteAgencyResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            agencyKey:
              type: string
            agencyName:
              type: string
            stateKey:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            imageCoords:
              type: string
            stateId:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            agencyOnlyName:
              type: string
            agencyCompleteName:
              type: string
    AdminSearchSiteStateResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              stateKey:
                type: string
              stateName:
                type: string
              stateAbbreviation:
                type: string
              imageLeft:
                type: string
              imageTop:
                type: string
              agencyKeys:
                type: array
                items:
                  type: string
              stateCompleteName:
                type: string
    POSTSiteStateRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    POSTSiteStateResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PATCHSiteStateRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setStateKey:
              type: string
              nullable: true
            removeStateKey:
              type: string
            removeAllStateKey:
              type: string
            setStateName:
              type: string
              nullable: true
            removeStateName:
              type: string
            removeAllStateName:
              type: string
            setStateAbbreviation:
              type: string
              nullable: true
            removeStateAbbreviation:
              type: string
            removeAllStateAbbreviation:
              type: string
            setImageLeft:
              type: string
              nullable: true
            removeImageLeft:
              type: string
            removeAllImageLeft:
              type: string
            setImageTop:
              type: string
              nullable: true
            removeImageTop:
              type: string
            removeAllImageTop:
              type: string
            setAgencyKeys:
              type: array
              nullable: true
              items:
                type: string
            removeAgencyKeys:
              type: string
            removeAllAgencyKeys:
              type: array
              items:
                type: string
            addAgencyKeys:
              type: string
            addAllAgencyKeys:
              type: array
              items:
                type: string
            setStateCompleteName:
              type: string
              nullable: true
            removeStateCompleteName:
              type: string
            removeAllStateCompleteName:
              type: string
    PATCHSiteStateResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setStateKey:
              type: string
              nullable: true
            removeStateKey:
              type: string
            removeAllStateKey:
              type: string
            setStateName:
              type: string
              nullable: true
            removeStateName:
              type: string
            removeAllStateName:
              type: string
            setStateAbbreviation:
              type: string
              nullable: true
            removeStateAbbreviation:
              type: string
            removeAllStateAbbreviation:
              type: string
            setImageLeft:
              type: string
              nullable: true
            removeImageLeft:
              type: string
            removeAllImageLeft:
              type: string
            setImageTop:
              type: string
              nullable: true
            removeImageTop:
              type: string
            removeAllImageTop:
              type: string
            setAgencyKeys:
              type: array
              nullable: true
              items:
                type: string
            removeAgencyKeys:
              type: string
            removeAllAgencyKeys:
              type: array
              items:
                type: string
            addAgencyKeys:
              type: string
            addAllAgencyKeys:
              type: array
              items:
                type: string
            setStateCompleteName:
              type: string
              nullable: true
            removeStateCompleteName:
              type: string
            removeAllStateCompleteName:
              type: string
    SearchSiteStateResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              stateKey:
                type: string
              stateName:
                type: string
              stateAbbreviation:
                type: string
              imageLeft:
                type: string
              imageTop:
                type: string
              agencyKeys:
                type: array
                items:
                  type: string
              stateCompleteName:
                type: string
    PUTCopySiteStateRequest:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PUTCopySiteStateResponse:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PUTImportSiteStateRequest:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PUTImportSiteStateResponse:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PUTMergeSiteStateRequest:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    PUTMergeSiteStateResponse:
      allOf:
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    GETSiteStateResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            stateKey:
              type: string
            stateName:
              type: string
            stateAbbreviation:
              type: string
            imageLeft:
              type: string
            imageTop:
              type: string
            agencyKeys:
              type: array
              items:
                type: string
            stateCompleteName:
              type: string
    SearchPageSiteStateResponse:
      allOf:
        - type: string
    AdminSearchTrafficContrabandResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              contrabandKey:
                type: string
              searchKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              contrabandOunces:
                type: string
              contrabandPounds:
                type: string
              contrabandPints:
                type: string
              contrabandGallons:
                type: string
              contrabandDosages:
                type: string
              contrabandGrams:
                type: string
              contrabandKilos:
                type: string
              contrabandMoney:
                type: string
              contrabandWeapons:
                type: string
              contrabandDollarAmount:
                type: string
              trafficSearchShortName:
                type: string
              trafficSearchCompleteName:
                type: string
    POSTTrafficContrabandRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    POSTTrafficContrabandResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PATCHTrafficContrabandRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setContrabandKey:
              type: string
              nullable: true
            removeContrabandKey:
              type: string
            removeAllContrabandKey:
              type: string
            setSearchKey:
              type: string
              nullable: true
            removeSearchKey:
              type: string
            removeAllSearchKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setContrabandOunces:
              type: string
              nullable: true
            removeContrabandOunces:
              type: string
            removeAllContrabandOunces:
              type: string
            setContrabandPounds:
              type: string
              nullable: true
            removeContrabandPounds:
              type: string
            removeAllContrabandPounds:
              type: string
            setContrabandPints:
              type: string
              nullable: true
            removeContrabandPints:
              type: string
            removeAllContrabandPints:
              type: string
            setContrabandGallons:
              type: string
              nullable: true
            removeContrabandGallons:
              type: string
            removeAllContrabandGallons:
              type: string
            setContrabandDosages:
              type: string
              nullable: true
            removeContrabandDosages:
              type: string
            removeAllContrabandDosages:
              type: string
            setContrabandGrams:
              type: string
              nullable: true
            removeContrabandGrams:
              type: string
            removeAllContrabandGrams:
              type: string
            setContrabandKilos:
              type: string
              nullable: true
            removeContrabandKilos:
              type: string
            removeAllContrabandKilos:
              type: string
            setContrabandMoney:
              type: string
              nullable: true
            removeContrabandMoney:
              type: string
            removeAllContrabandMoney:
              type: string
            setContrabandWeapons:
              type: string
              nullable: true
            removeContrabandWeapons:
              type: string
            removeAllContrabandWeapons:
              type: string
            setContrabandDollarAmount:
              type: string
              nullable: true
            removeContrabandDollarAmount:
              type: string
            removeAllContrabandDollarAmount:
              type: string
            setTrafficSearchShortName:
              type: string
              nullable: true
            removeTrafficSearchShortName:
              type: string
            removeAllTrafficSearchShortName:
              type: string
            setTrafficSearchCompleteName:
              type: string
              nullable: true
            removeTrafficSearchCompleteName:
              type: string
            removeAllTrafficSearchCompleteName:
              type: string
    PATCHTrafficContrabandResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setContrabandKey:
              type: string
              nullable: true
            removeContrabandKey:
              type: string
            removeAllContrabandKey:
              type: string
            setSearchKey:
              type: string
              nullable: true
            removeSearchKey:
              type: string
            removeAllSearchKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setContrabandOunces:
              type: string
              nullable: true
            removeContrabandOunces:
              type: string
            removeAllContrabandOunces:
              type: string
            setContrabandPounds:
              type: string
              nullable: true
            removeContrabandPounds:
              type: string
            removeAllContrabandPounds:
              type: string
            setContrabandPints:
              type: string
              nullable: true
            removeContrabandPints:
              type: string
            removeAllContrabandPints:
              type: string
            setContrabandGallons:
              type: string
              nullable: true
            removeContrabandGallons:
              type: string
            removeAllContrabandGallons:
              type: string
            setContrabandDosages:
              type: string
              nullable: true
            removeContrabandDosages:
              type: string
            removeAllContrabandDosages:
              type: string
            setContrabandGrams:
              type: string
              nullable: true
            removeContrabandGrams:
              type: string
            removeAllContrabandGrams:
              type: string
            setContrabandKilos:
              type: string
              nullable: true
            removeContrabandKilos:
              type: string
            removeAllContrabandKilos:
              type: string
            setContrabandMoney:
              type: string
              nullable: true
            removeContrabandMoney:
              type: string
            removeAllContrabandMoney:
              type: string
            setContrabandWeapons:
              type: string
              nullable: true
            removeContrabandWeapons:
              type: string
            removeAllContrabandWeapons:
              type: string
            setContrabandDollarAmount:
              type: string
              nullable: true
            removeContrabandDollarAmount:
              type: string
            removeAllContrabandDollarAmount:
              type: string
            setTrafficSearchShortName:
              type: string
              nullable: true
            removeTrafficSearchShortName:
              type: string
            removeAllTrafficSearchShortName:
              type: string
            setTrafficSearchCompleteName:
              type: string
              nullable: true
            removeTrafficSearchCompleteName:
              type: string
            removeAllTrafficSearchCompleteName:
              type: string
    SearchTrafficContrabandResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              contrabandKey:
                type: string
              searchKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              contrabandOunces:
                type: string
              contrabandPounds:
                type: string
              contrabandPints:
                type: string
              contrabandGallons:
                type: string
              contrabandDosages:
                type: string
              contrabandGrams:
                type: string
              contrabandKilos:
                type: string
              contrabandMoney:
                type: string
              contrabandWeapons:
                type: string
              contrabandDollarAmount:
                type: string
              trafficSearchShortName:
                type: string
              trafficSearchCompleteName:
                type: string
    PUTCopyTrafficContrabandRequest:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PUTCopyTrafficContrabandResponse:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PUTImportTrafficContrabandRequest:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PUTImportTrafficContrabandResponse:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PUTMergeTrafficContrabandRequest:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    PUTMergeTrafficContrabandResponse:
      allOf:
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    GETTrafficContrabandResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            contrabandKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            contrabandOunces:
              type: string
            contrabandPounds:
              type: string
            contrabandPints:
              type: string
            contrabandGallons:
              type: string
            contrabandDosages:
              type: string
            contrabandGrams:
              type: string
            contrabandKilos:
              type: string
            contrabandMoney:
              type: string
            contrabandWeapons:
              type: string
            contrabandDollarAmount:
              type: string
            trafficSearchShortName:
              type: string
            trafficSearchCompleteName:
              type: string
    SearchPageTrafficContrabandResponse:
      allOf:
        - type: string
    AdminSearchSearchBasisResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              searchBasisKey:
                type: string
              searchKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              searchBasisId:
                type: string
              searchBasisTitle:
                type: string
              searchBasisShortName:
                type: string
              searchBasisCompleteName:
                type: string
    POSTSearchBasisRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    POSTSearchBasisResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PATCHSearchBasisRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSearchBasisKey:
              type: string
              nullable: true
            removeSearchBasisKey:
              type: string
            removeAllSearchBasisKey:
              type: string
            setSearchKey:
              type: string
              nullable: true
            removeSearchKey:
              type: string
            removeAllSearchKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setSearchBasisId:
              type: string
              nullable: true
            removeSearchBasisId:
              type: string
            removeAllSearchBasisId:
              type: string
            setSearchBasisTitle:
              type: string
              nullable: true
            removeSearchBasisTitle:
              type: string
            removeAllSearchBasisTitle:
              type: string
            setSearchBasisShortName:
              type: string
              nullable: true
            removeSearchBasisShortName:
              type: string
            removeAllSearchBasisShortName:
              type: string
            setSearchBasisCompleteName:
              type: string
              nullable: true
            removeSearchBasisCompleteName:
              type: string
            removeAllSearchBasisCompleteName:
              type: string
    PATCHSearchBasisResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSearchBasisKey:
              type: string
              nullable: true
            removeSearchBasisKey:
              type: string
            removeAllSearchBasisKey:
              type: string
            setSearchKey:
              type: string
              nullable: true
            removeSearchKey:
              type: string
            removeAllSearchKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setSearchBasisId:
              type: string
              nullable: true
            removeSearchBasisId:
              type: string
            removeAllSearchBasisId:
              type: string
            setSearchBasisTitle:
              type: string
              nullable: true
            removeSearchBasisTitle:
              type: string
            removeAllSearchBasisTitle:
              type: string
            setSearchBasisShortName:
              type: string
              nullable: true
            removeSearchBasisShortName:
              type: string
            removeAllSearchBasisShortName:
              type: string
            setSearchBasisCompleteName:
              type: string
              nullable: true
            removeSearchBasisCompleteName:
              type: string
            removeAllSearchBasisCompleteName:
              type: string
    SearchSearchBasisResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              searchBasisKey:
                type: string
              searchKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              searchBasisId:
                type: string
              searchBasisTitle:
                type: string
              searchBasisShortName:
                type: string
              searchBasisCompleteName:
                type: string
    PUTCopySearchBasisRequest:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PUTCopySearchBasisResponse:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PUTImportSearchBasisRequest:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PUTImportSearchBasisResponse:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PUTMergeSearchBasisRequest:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    PUTMergeSearchBasisResponse:
      allOf:
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    GETSearchBasisResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            searchBasisKey:
              type: string
            searchKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            searchBasisId:
              type: string
            searchBasisTitle:
              type: string
            searchBasisShortName:
              type: string
            searchBasisCompleteName:
              type: string
    SearchPageSearchBasisResponse:
      allOf:
        - type: string
    AdminSearchTrafficPersonResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              personKey:
                type: string
              trafficStopKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              trafficSearchKeys:
                type: array
                items:
                  type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficPersonShortName:
                type: string
              trafficPersonCompleteName:
                type: string
    POSTTrafficPersonRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    POSTTrafficPersonResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PATCHTrafficPersonRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setPersonKey:
              type: string
              nullable: true
            removePersonKey:
              type: string
            removeAllPersonKey:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setTrafficSearchKeys:
              type: array
              nullable: true
              items:
                type: string
            removeTrafficSearchKeys:
              type: string
            removeAllTrafficSearchKeys:
              type: array
              items:
                type: string
            addTrafficSearchKeys:
              type: string
            addAllTrafficSearchKeys:
              type: array
              items:
                type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficPersonShortName:
              type: string
              nullable: true
            removeTrafficPersonShortName:
              type: string
            removeAllTrafficPersonShortName:
              type: string
            setTrafficPersonCompleteName:
              type: string
              nullable: true
            removeTrafficPersonCompleteName:
              type: string
            removeAllTrafficPersonCompleteName:
              type: string
    PATCHTrafficPersonResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setPersonKey:
              type: string
              nullable: true
            removePersonKey:
              type: string
            removeAllPersonKey:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setTrafficSearchKeys:
              type: array
              nullable: true
              items:
                type: string
            removeTrafficSearchKeys:
              type: string
            removeAllTrafficSearchKeys:
              type: array
              items:
                type: string
            addTrafficSearchKeys:
              type: string
            addAllTrafficSearchKeys:
              type: array
              items:
                type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficPersonShortName:
              type: string
              nullable: true
            removeTrafficPersonShortName:
              type: string
            removeAllTrafficPersonShortName:
              type: string
            setTrafficPersonCompleteName:
              type: string
              nullable: true
            removeTrafficPersonCompleteName:
              type: string
            removeAllTrafficPersonCompleteName:
              type: string
    SearchTrafficPersonResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              personKey:
                type: string
              trafficStopKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              trafficSearchKeys:
                type: array
                items:
                  type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficPersonShortName:
                type: string
              trafficPersonCompleteName:
                type: string
    PUTCopyTrafficPersonRequest:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PUTCopyTrafficPersonResponse:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PUTImportTrafficPersonRequest:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PUTImportTrafficPersonResponse:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PUTMergeTrafficPersonRequest:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    PUTMergeTrafficPersonResponse:
      allOf:
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    GETTrafficPersonResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            personKey:
              type: string
            trafficStopKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            trafficSearchKeys:
              type: array
              items:
                type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficPersonShortName:
              type: string
            trafficPersonCompleteName:
              type: string
    SearchPageTrafficPersonResponse:
      allOf:
        - type: string
    AdminSearchTrafficStopResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              trafficStopKey:
                type: string
              agencyKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopYear:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personKeys:
                type: array
                items:
                  type: string
              personRaceTitles:
                type: array
                items:
                  type: string
              trafficSearchRaceTitles:
                type: array
                items:
                  type: string
              trafficStopCompleteName:
                type: string
    POSTTrafficStopRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    POSTTrafficStopResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PATCHTrafficStopRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setAgencyKey:
              type: string
              nullable: true
            removeAgencyKey:
              type: string
            removeAllAgencyKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopYear:
              type: string
              nullable: true
            removeStopYear:
              type: string
            removeAllStopYear:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonKeys:
              type: array
              nullable: true
              items:
                type: string
            removePersonKeys:
              type: string
            removeAllPersonKeys:
              type: array
              items:
                type: string
            addPersonKeys:
              type: string
            addAllPersonKeys:
              type: array
              items:
                type: string
            setPersonRaceTitles:
              type: array
              nullable: true
              items:
                type: string
            removePersonRaceTitles:
              type: string
            removeAllPersonRaceTitles:
              type: array
              items:
                type: string
            addPersonRaceTitles:
              type: string
            addAllPersonRaceTitles:
              type: array
              items:
                type: string
            setTrafficSearchRaceTitles:
              type: array
              nullable: true
              items:
                type: string
            removeTrafficSearchRaceTitles:
              type: string
            removeAllTrafficSearchRaceTitles:
              type: array
              items:
                type: string
            addTrafficSearchRaceTitles:
              type: string
            addAllTrafficSearchRaceTitles:
              type: array
              items:
                type: string
            setTrafficStopCompleteName:
              type: string
              nullable: true
            removeTrafficStopCompleteName:
              type: string
            removeAllTrafficStopCompleteName:
              type: string
    PATCHTrafficStopResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setAgencyKey:
              type: string
              nullable: true
            removeAgencyKey:
              type: string
            removeAllAgencyKey:
              type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopYear:
              type: string
              nullable: true
            removeStopYear:
              type: string
            removeAllStopYear:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonKeys:
              type: array
              nullable: true
              items:
                type: string
            removePersonKeys:
              type: string
            removeAllPersonKeys:
              type: array
              items:
                type: string
            addPersonKeys:
              type: string
            addAllPersonKeys:
              type: array
              items:
                type: string
            setPersonRaceTitles:
              type: array
              nullable: true
              items:
                type: string
            removePersonRaceTitles:
              type: string
            removeAllPersonRaceTitles:
              type: array
              items:
                type: string
            addPersonRaceTitles:
              type: string
            addAllPersonRaceTitles:
              type: array
              items:
                type: string
            setTrafficSearchRaceTitles:
              type: array
              nullable: true
              items:
                type: string
            removeTrafficSearchRaceTitles:
              type: string
            removeAllTrafficSearchRaceTitles:
              type: array
              items:
                type: string
            addTrafficSearchRaceTitles:
              type: string
            addAllTrafficSearchRaceTitles:
              type: array
              items:
                type: string
            setTrafficStopCompleteName:
              type: string
              nullable: true
            removeTrafficStopCompleteName:
              type: string
            removeAllTrafficStopCompleteName:
              type: string
    SearchTrafficStopResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              trafficStopKey:
                type: string
              agencyKey:
                type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopYear:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personKeys:
                type: array
                items:
                  type: string
              personRaceTitles:
                type: array
                items:
                  type: string
              trafficSearchRaceTitles:
                type: array
                items:
                  type: string
              trafficStopCompleteName:
                type: string
    PUTCopyTrafficStopRequest:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PUTCopyTrafficStopResponse:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PUTImportTrafficStopRequest:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PUTImportTrafficStopResponse:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PUTMergeTrafficStopRequest:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    PUTMergeTrafficStopResponse:
      allOf:
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    GETTrafficStopResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            trafficStopKey:
              type: string
            agencyKey:
              type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopYear:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personKeys:
              type: array
              items:
                type: string
            personRaceTitles:
              type: array
              items:
                type: string
            trafficSearchRaceTitles:
              type: array
              items:
                type: string
            trafficStopCompleteName:
              type: string
    SearchPageTrafficStopResponse:
      allOf:
        - type: string
    AdminSearchTrafficSearchResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              trafficSearchKey:
                type: string
              personKey:
                type: string
              contrabandKeys:
                type: array
                items:
                  type: string
              searchBasisKeys:
                type: array
                items:
                  type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              trafficSearchCompleteName:
                type: string
    POSTTrafficSearchRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    POSTTrafficSearchResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PATCHTrafficSearchRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setTrafficSearchKey:
              type: string
              nullable: true
            removeTrafficSearchKey:
              type: string
            removeAllTrafficSearchKey:
              type: string
            setPersonKey:
              type: string
              nullable: true
            removePersonKey:
              type: string
            removeAllPersonKey:
              type: string
            setContrabandKeys:
              type: array
              nullable: true
              items:
                type: string
            removeContrabandKeys:
              type: string
            removeAllContrabandKeys:
              type: array
              items:
                type: string
            addContrabandKeys:
              type: string
            addAllContrabandKeys:
              type: array
              items:
                type: string
            setSearchBasisKeys:
              type: array
              nullable: true
              items:
                type: string
            removeSearchBasisKeys:
              type: string
            removeAllSearchBasisKeys:
              type: array
              items:
                type: string
            addSearchBasisKeys:
              type: string
            addAllSearchBasisKeys:
              type: array
              items:
                type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setTrafficSearchCompleteName:
              type: string
              nullable: true
            removeTrafficSearchCompleteName:
              type: string
            removeAllTrafficSearchCompleteName:
              type: string
    PATCHTrafficSearchResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setTrafficSearchKey:
              type: string
              nullable: true
            removeTrafficSearchKey:
              type: string
            removeAllTrafficSearchKey:
              type: string
            setPersonKey:
              type: string
              nullable: true
            removePersonKey:
              type: string
            removeAllPersonKey:
              type: string
            setContrabandKeys:
              type: array
              nullable: true
              items:
                type: string
            removeContrabandKeys:
              type: string
            removeAllContrabandKeys:
              type: array
              items:
                type: string
            addContrabandKeys:
              type: string
            addAllContrabandKeys:
              type: array
              items:
                type: string
            setSearchBasisKeys:
              type: array
              nullable: true
              items:
                type: string
            removeSearchBasisKeys:
              type: string
            removeAllSearchBasisKeys:
              type: array
              items:
                type: string
            addSearchBasisKeys:
              type: string
            addAllSearchBasisKeys:
              type: array
              items:
                type: string
            setStopAgencyTitle:
              type: string
              nullable: true
            removeStopAgencyTitle:
              type: string
            removeAllStopAgencyTitle:
              type: string
            setStopDateTime:
              type: string
              nullable: true
            removeStopDateTime:
              type: string
            removeAllStopDateTime:
              type: string
            setStopPurposeNum:
              type: string
              nullable: true
            removeStopPurposeNum:
              type: string
            removeAllStopPurposeNum:
              type: string
            setStopPurposeTitle:
              type: string
              nullable: true
            removeStopPurposeTitle:
              type: string
            removeAllStopPurposeTitle:
              type: string
            setStopActionNum:
              type: string
              nullable: true
            removeStopActionNum:
              type: string
            removeAllStopActionNum:
              type: string
            setStopActionTitle:
              type: string
              nullable: true
            removeStopActionTitle:
              type: string
            removeAllStopActionTitle:
              type: string
            setStopDriverArrest:
              type: boolean
              nullable: true
            removeStopDriverArrest:
              type: boolean
            removeAllStopDriverArrest:
              type: boolean
            setStopPassengerArrest:
              type: boolean
              nullable: true
            removeStopPassengerArrest:
              type: boolean
            removeAllStopPassengerArrest:
              type: boolean
            setStopEncounterForce:
              type: boolean
              nullable: true
            removeStopEncounterForce:
              type: boolean
            removeAllStopEncounterForce:
              type: boolean
            setStopEngageForce:
              type: boolean
              nullable: true
            removeStopEngageForce:
              type: boolean
            removeAllStopEngageForce:
              type: boolean
            setStopOfficerInjury:
              type: boolean
              nullable: true
            removeStopOfficerInjury:
              type: boolean
            removeAllStopOfficerInjury:
              type: boolean
            setStopDriverInjury:
              type: boolean
              nullable: true
            removeStopDriverInjury:
              type: boolean
            removeAllStopDriverInjury:
              type: boolean
            setStopPassengerInjury:
              type: boolean
              nullable: true
            removeStopPassengerInjury:
              type: boolean
            removeAllStopPassengerInjury:
              type: boolean
            setStopOfficerId:
              type: string
              nullable: true
            removeStopOfficerId:
              type: string
            removeAllStopOfficerId:
              type: string
            setStopLocationId:
              type: string
              nullable: true
            removeStopLocationId:
              type: string
            removeAllStopLocationId:
              type: string
            setStopCityId:
              type: string
              nullable: true
            removeStopCityId:
              type: string
            removeAllStopCityId:
              type: string
            setPersonAge:
              type: string
              nullable: true
            removePersonAge:
              type: string
            removeAllPersonAge:
              type: string
            setPersonTypeId:
              type: string
              nullable: true
            removePersonTypeId:
              type: string
            removeAllPersonTypeId:
              type: string
            setPersonTypeTitle:
              type: string
              nullable: true
            removePersonTypeTitle:
              type: string
            removeAllPersonTypeTitle:
              type: string
            setPersonTypeDriver:
              type: boolean
              nullable: true
            removePersonTypeDriver:
              type: boolean
            removeAllPersonTypeDriver:
              type: boolean
            setPersonTypePassenger:
              type: boolean
              nullable: true
            removePersonTypePassenger:
              type: boolean
            removeAllPersonTypePassenger:
              type: boolean
            setPersonGenderId:
              type: string
              nullable: true
            removePersonGenderId:
              type: string
            removeAllPersonGenderId:
              type: string
            setPersonGenderTitle:
              type: string
              nullable: true
            removePersonGenderTitle:
              type: string
            removeAllPersonGenderTitle:
              type: string
            setPersonGenderFemale:
              type: boolean
              nullable: true
            removePersonGenderFemale:
              type: boolean
            removeAllPersonGenderFemale:
              type: boolean
            setPersonGenderMale:
              type: boolean
              nullable: true
            removePersonGenderMale:
              type: boolean
            removeAllPersonGenderMale:
              type: boolean
            setPersonEthnicityId:
              type: string
              nullable: true
            removePersonEthnicityId:
              type: string
            removeAllPersonEthnicityId:
              type: string
            setPersonEthnicityTitle:
              type: string
              nullable: true
            removePersonEthnicityTitle:
              type: string
            removeAllPersonEthnicityTitle:
              type: string
            setPersonRaceId:
              type: string
              nullable: true
            removePersonRaceId:
              type: string
            removeAllPersonRaceId:
              type: string
            setPersonRaceTitle:
              type: string
              nullable: true
            removePersonRaceTitle:
              type: string
            removeAllPersonRaceTitle:
              type: string
            setTrafficStopKey:
              type: string
              nullable: true
            removeTrafficStopKey:
              type: string
            removeAllTrafficStopKey:
              type: string
            setSearchTypeNum:
              type: string
              nullable: true
            removeSearchTypeNum:
              type: string
            removeAllSearchTypeNum:
              type: string
            setSearchTypeTitle:
              type: string
              nullable: true
            removeSearchTypeTitle:
              type: string
            removeAllSearchTypeTitle:
              type: string
            setSearchVehicle:
              type: boolean
              nullable: true
            removeSearchVehicle:
              type: boolean
            removeAllSearchVehicle:
              type: boolean
            setSearchDriver:
              type: boolean
              nullable: true
            removeSearchDriver:
              type: boolean
            removeAllSearchDriver:
              type: boolean
            setSearchPassenger:
              type: boolean
              nullable: true
            removeSearchPassenger:
              type: boolean
            removeAllSearchPassenger:
              type: boolean
            setSearchProperty:
              type: boolean
              nullable: true
            removeSearchProperty:
              type: boolean
            removeAllSearchProperty:
              type: boolean
            setSearchVehicleSiezed:
              type: boolean
              nullable: true
            removeSearchVehicleSiezed:
              type: boolean
            removeAllSearchVehicleSiezed:
              type: boolean
            setSearchPersonalPropertySiezed:
              type: boolean
              nullable: true
            removeSearchPersonalPropertySiezed:
              type: boolean
            removeAllSearchPersonalPropertySiezed:
              type: boolean
            setSearchOtherPropertySiezed:
              type: boolean
              nullable: true
            removeSearchOtherPropertySiezed:
              type: boolean
            removeAllSearchOtherPropertySiezed:
              type: boolean
            setTrafficSearchCompleteName:
              type: string
              nullable: true
            removeTrafficSearchCompleteName:
              type: string
            removeAllTrafficSearchCompleteName:
              type: string
    SearchTrafficSearchResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              trafficSearchKey:
                type: string
              personKey:
                type: string
              contrabandKeys:
                type: array
                items:
                  type: string
              searchBasisKeys:
                type: array
                items:
                  type: string
              stopAgencyTitle:
                type: string
              stopDateTime:
                type: string
              stopPurposeNum:
                type: string
              stopPurposeTitle:
                type: string
              stopActionNum:
                type: string
              stopActionTitle:
                type: string
              stopDriverArrest:
                type: boolean
              stopPassengerArrest:
                type: boolean
              stopEncounterForce:
                type: boolean
              stopEngageForce:
                type: boolean
              stopOfficerInjury:
                type: boolean
              stopDriverInjury:
                type: boolean
              stopPassengerInjury:
                type: boolean
              stopOfficerId:
                type: string
              stopLocationId:
                type: string
              stopCityId:
                type: string
              personAge:
                type: string
              personTypeId:
                type: string
              personTypeTitle:
                type: string
              personTypeDriver:
                type: boolean
              personTypePassenger:
                type: boolean
              personGenderId:
                type: string
              personGenderTitle:
                type: string
              personGenderFemale:
                type: boolean
              personGenderMale:
                type: boolean
              personEthnicityId:
                type: string
              personEthnicityTitle:
                type: string
              personRaceId:
                type: string
              personRaceTitle:
                type: string
              trafficStopKey:
                type: string
              searchTypeNum:
                type: string
              searchTypeTitle:
                type: string
              searchVehicle:
                type: boolean
              searchDriver:
                type: boolean
              searchPassenger:
                type: boolean
              searchProperty:
                type: boolean
              searchVehicleSiezed:
                type: boolean
              searchPersonalPropertySiezed:
                type: boolean
              searchOtherPropertySiezed:
                type: boolean
              trafficSearchCompleteName:
                type: string
    PUTCopyTrafficSearchRequest:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PUTCopyTrafficSearchResponse:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PUTImportTrafficSearchRequest:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PUTImportTrafficSearchResponse:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PUTMergeTrafficSearchRequest:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    PUTMergeTrafficSearchResponse:
      allOf:
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    GETTrafficSearchResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            trafficSearchKey:
              type: string
            personKey:
              type: string
            contrabandKeys:
              type: array
              items:
                type: string
            searchBasisKeys:
              type: array
              items:
                type: string
            stopAgencyTitle:
              type: string
            stopDateTime:
              type: string
            stopPurposeNum:
              type: string
            stopPurposeTitle:
              type: string
            stopActionNum:
              type: string
            stopActionTitle:
              type: string
            stopDriverArrest:
              type: boolean
            stopPassengerArrest:
              type: boolean
            stopEncounterForce:
              type: boolean
            stopEngageForce:
              type: boolean
            stopOfficerInjury:
              type: boolean
            stopDriverInjury:
              type: boolean
            stopPassengerInjury:
              type: boolean
            stopOfficerId:
              type: string
            stopLocationId:
              type: string
            stopCityId:
              type: string
            personAge:
              type: string
            personTypeId:
              type: string
            personTypeTitle:
              type: string
            personTypeDriver:
              type: boolean
            personTypePassenger:
              type: boolean
            personGenderId:
              type: string
            personGenderTitle:
              type: string
            personGenderFemale:
              type: boolean
            personGenderMale:
              type: boolean
            personEthnicityId:
              type: string
            personEthnicityTitle:
              type: string
            personRaceId:
              type: string
            personRaceTitle:
              type: string
            trafficStopKey:
              type: string
            searchTypeNum:
              type: string
            searchTypeTitle:
              type: string
            searchVehicle:
              type: boolean
            searchDriver:
              type: boolean
            searchPassenger:
              type: boolean
            searchProperty:
              type: boolean
            searchVehicleSiezed:
              type: boolean
            searchPersonalPropertySiezed:
              type: boolean
            searchOtherPropertySiezed:
              type: boolean
            trafficSearchCompleteName:
              type: string
    SearchPageTrafficSearchResponse:
      allOf:
        - type: string
    ErrorResponse:
      required:
        - type
        - code
      properties:
        type:
          type: string
          enum:
            - ERROR
            - WARN
            - INVALID
            - FATAL
          description: >+
            <br>invalid - Request did not confirm to the specification and was
            unprocessed & rejected. Please fix the value and try again</br>       
            <br>warn - Request was partially processed.  E.g. some of the fields
            are missing in response to the system issues,  request was accepted
            successfully but will be processed asynchronously</br>                
            <br>error - The request was accepted but could not be processed
            successfully</br>            <br>fatal - There was an internal system
            error while processing the request. These are technical errors and
            will be resolved by Citi, and the consumer should retry after some
            time. Business errors will not be categorized as fatal </br>
        code:
          type: string
          description: Error code which qualifies the error. 
        details:
          type: string
          description: Human readable explanation specific to the occurrence of the problem. 
        location:
          type: string
          description: The name of the field that resulted in the error. 
        moreInfo:
          type: string
          description: URI to human readable documentation of the error. 
